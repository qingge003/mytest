异常处理:限制机构,能够让程序从异常中恢复,发现错误的来源和错误的原因    
    基本格式:
    try {	
       //捕获异常
	} 
	catch (ExceptionType ExceptionName) {
	   //处理异常
	}
	finally {
		//有没有异常都执行
	}
	
try表示执行的程序，在try中运行的程序都将会被检测，并且产生错误后会抛出异常。
catch表示如果在try语句块的程序产生了错误，并且这个错误符合catch中括号内的 ExceptionType，
      也就是异常类型符合的话，就会中断try语句的执行，转为执行 catch语句中的程序。
finally表示无论try程序中是否出现异常、ctch是否执行等 finally都不会影响语句的执行，
通常用来进行程序资源的释放
换句话来说就是 finally中的程序一定会执行。 finally是可省略的。

Exception类派生的类都是受检异常，这类异常都能在抛出后作出妥善处理，以确保程序够继续运行

比较常见的 Exception如下:
●算术异常类: ArithmeticExecption
●空指针异常类: NullPointerException
●类型强制转换异常: ClassCastException
●文件未找到异常: FileNotFoundException
●输入输出异常: IOException
●数组下标越界异常: ArrayIndexOutOfBoundsException
●实例化异常: InstantiationException
●字符串转换为数字异常: NumberFormatException
●操作数据库异常类:SQLException
●方法未找到异常:NoSuchMethodException
	
	
	
	 
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	